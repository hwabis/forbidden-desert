{"version":3,"sources":["Game.js","board.js","App.js","index.js"],"names":["ForbiddenDesert","setup","ctx","players","setupPlayers","numPlayers","tiles","setupTiles","moves","move","G","pos","currentPlayer","position","dig","sandCount","turn","moveLimit","i","push","isStorm","isRevealed","sandTiles","length","ForbiddenDesertBoard","state","digging","id","this","isAdjacentTile","isSameTile","props","setState","currentPlayerPos","row","tile","j","k","className","sandIndicator","l","concat","onClick","numMoves","React","Component","App","ForbiddenDesertClient","Client","game","board","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1dd3c1c.chunk.js","sourcesContent":["export const ForbiddenDesert = {\r\n    setup: (ctx) => ({\r\n        players: setupPlayers(ctx.numPlayers),\r\n        tiles: setupTiles(),\r\n    }),\r\n\r\n    moves: {\r\n        move: (G, ctx, pos) => {\r\n            G.players[ctx.currentPlayer].position = pos;\r\n        },\r\n        dig: (G, ctx, pos) => {\r\n            G.tiles[pos].sandCount--;\r\n        }\r\n    },\r\n\r\n    turn: {\r\n        moveLimit: 4,\r\n    },\r\n}; \r\n\r\nvar setupPlayers = (numPlayers) => {\r\n    var players = [];\r\n    for (var i = 0; i < numPlayers; i++) {\r\n        players.push({\r\n            //TODO: REPLACE WITH HELICOPTER CRASH TILE POSITION\r\n            position: 3,\r\n        });\r\n    }\r\n    return players;\r\n}\r\n\r\nvar setupTiles = () => {\r\n    var tiles = [];\r\n    for (var i = 0; i < 25; i++) {\r\n        var tile = {\r\n            isStorm: false,\r\n            isRevealed: false,\r\n            sandCount: 0,\r\n        }\r\n        tiles.push(tile);\r\n    }\r\n    tiles[12].isStorm = true;\r\n    const sandTiles = [2, 6, 8, 10, 14, 16, 18, 22];\r\n    for (var i = 0; i < sandTiles.length; i++) {\r\n        tiles[sandTiles[i]].sandCount = 1;\r\n    }\r\n    return tiles;\r\n}","import React from 'react';\r\nimport './board.css';\r\n\r\nexport class ForbiddenDesertBoard extends React.Component {\r\n    state = {\r\n        digging: false\r\n    }\r\n\r\n    onClick(id) {\r\n        if (this.isAdjacentTile(id) || this.isSameTile(id)) {\r\n            if (this.state.digging && this.props.G.tiles[id].sandCount > 0) {\r\n                this.props.moves.dig(id);\r\n                this.setState({ digging: false });\r\n            }\r\n            else if (!this.isSameTile(id) && this.props.G.tiles[id].sandCount < 2 && !this.state.digging) {\r\n                this.props.moves.move(id);\r\n            }\r\n        }\r\n    }\r\n    isAdjacentTile(id) {\r\n        const currentPlayerPos = this.props.G.players[this.props.ctx.currentPlayer].position;\r\n        return (id >= 0 && id <= 24 &&\r\n            (id === currentPlayerPos - 1 || id === currentPlayerPos + 1 ||\r\n                id === currentPlayerPos - 5 || id === currentPlayerPos + 5));\r\n    }\r\n    isSameTile(id) {\r\n        return (id === this.props.G.players[this.props.ctx.currentPlayer].position);\r\n    }\r\n\r\n    render() {\r\n        var tiles = [];\r\n        for (var i = 0; i < 5; i++) {\r\n            var row = [];\r\n            for (var j = 0; j < 5; j++) {\r\n                var tile = [];\r\n                const id = 5 * i + j;\r\n                if (this.props.G.tiles[id].isStorm) {\r\n                    row.push(<td key={id} id=\"storm\"></td>);\r\n                }\r\n                else {\r\n                    var players = [];\r\n                    for (var k = 0; k < this.props.G.players.length; k++) {\r\n                        if (this.props.G.players[k].position === id) {\r\n                            players.push(k);\r\n                        }\r\n                    }\r\n                    //eventually push each player marker so their color represents their role\r\n                    tile.push(<div className=\"player\">{players}</div>);\r\n                    if (this.props.G.tiles[id].sandCount !== 0) {\r\n                        var sandIndicator = \"\";\r\n                        for (var l = 0; l < this.props.G.tiles[id].sandCount; l++) {\r\n                            sandIndicator = sandIndicator.concat(\"l\");\r\n                        }\r\n                        tile.push(<div className={this.props.G.tiles[id].sandCount > 1 ? \"sand red\" : \"sand\"}>\r\n                            Sand: {sandIndicator}</div>);\r\n                    }\r\n                    row.push(<td key={id} className=\"unrevealed\" onClick={() => this.onClick(id)}>{tile}</td>);\r\n                }\r\n            }\r\n            tiles.push(<tr key={i}>{row}</tr>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"center\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        Player {this.props.ctx.currentPlayer}'s turn\r\n                    </div>\r\n                    <div>\r\n                        Moves left in turn: {4 - this.props.ctx.numMoves}\r\n                    </div>\r\n                </div>\r\n                <table className=\"center\">\r\n                    <tbody>{tiles}</tbody>\r\n                </table>\r\n                <div>\r\n                    <button onClick={() => { this.setState({ digging: !this.state.digging }); }}>\r\n                        Dig\r\n                    </button>\r\n                    <div>\r\n                        {this.state.digging ? \"Choose a tile to dig.\" : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Client } from 'boardgame.io/react';\r\nimport { ForbiddenDesert } from './Game';\r\nimport { ForbiddenDesertBoard } from './board';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = { numPlayers: null };\r\n\r\n  render() {\r\n    if (this.state.numPlayers === null) {\r\n      return (\r\n        <div className=\"center\">\r\n          <div id=\"title\">\r\n            FORBIDDEN DESERT\r\n          </div>\r\n          <div id=\"header\">\r\n            <p>Number of players:</p>\r\n            <button onClick={() => this.setState({ numPlayers: 2 })}>\r\n              2\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 3 })}>\r\n              3\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 4 })}>\r\n              4\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 5 })}>\r\n              5\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      const ForbiddenDesertClient = Client({\r\n        game: ForbiddenDesert,\r\n        numPlayers: this.state.numPlayers,\r\n        board: ForbiddenDesertBoard,\r\n      });\r\n      return (\r\n        <div>\r\n          <ForbiddenDesertClient />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}