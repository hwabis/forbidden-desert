(this["webpackJsonpforbidden-desert"]=this["webpackJsonpforbidden-desert"]||[]).push([[0],{55:function(e,t,s){},57:function(e,t,s){},93:function(e,t,s){"use strict";s.r(t);var i=s(1),r=s.n(i),n=s(48),l=s.n(n),a=s(3),c=s(4),o=s(5),p=s(6),d=s(49),h={setup:function(e){return{players:j(e.numPlayers),tiles:v(),stormLevel:0,lastDrawType:[],collectedParts:[]}},moves:{move:function(e,t,s){e.players[t.currentPlayer].position=s},dig:function(e,t,s){e.tiles[s].sandCount--},excavate:{move:function(e,t){var s=e.players[t.currentPlayer].position;if(e.tiles[s].isRevealed=!0,"well"===e.tiles[s].type)for(var i=0;i<e.players.length;i++)e.players[i].position===s&&(e.players[i].water+=2),e.players[i].water>e.players[i].maxWater&&(e.players[i].water=e.players[i].maxWater);else if("clue"===e.tiles[s].type){var r=!1;for(i=0;i<e.tiles.length;i++)e.tiles[i].isRevealed&&"clue"===e.tiles[i].type&&i!==s&&e.tiles[i].part===e.tiles[s].part&&(r=!0);if(r){var n,l,a=e.tiles[s].part;for(i=0;i<e.tiles.length;i++)e.tiles[i].part===a&&"h"===e.tiles[i].pos&&(n=i),e.tiles[i].part===a&&"v"===e.tiles[i].pos&&(l=i);for(;n%5!==0&&n>=0;)n-=1;var c=n+l%5;e.tiles[c].finalParts.push(a)}}},undoable:!1},giveWater:{move:function(e,t,s){e.players[t.currentPlayer].water-=1,e.players[s].water+=1},noLimit:!0},pickUpFinalPart:function(e,t){var s=e.tiles[e.players[t.currentPlayer].position].finalParts[0];e.tiles[e.players[t.currentPlayer].position].finalParts.splice(0,1),e.collectedParts.push(s)},doNothing:function(e,t){t.events.endTurn()},setPlayerInfo:{move:function(e,t,s,i){e.players[s].role=i,"Archeologist"===i||"Climber"===i?(e.players[s].maxWater=3,e.players[s].water=3):"Explorer"===i||"Meteorologist"===i||"Navigator"===i?(e.players[s].maxWater=4,e.players[s].water=4):(e.players[s].maxWater=5,e.players[s].water=5)},undoable:!1,noLimit:!0},setDifficulty:{move:function(e,t,s){e.stormLevel=s},undoable:!1,noLimit:!0},removeWater:{move:function(e,t,s){e.players[s].water-=1},noLimit:!0},placeFinalPart:{move:function(e,t,s){e.tiles[s].finalParts.push("Z")},noLimit:!0}},turn:{moveLimit:4},endIf:function(e,t){for(var s=0;s<e.players.length;s++)if(-1===e.players[s].water)return!0;return 2===t.numPlayers&&13===e.stormLevel||(3===t.numPlayers||4===t.numPlayers)&&14===e.stormLevel||5===t.numPlayers&&15===e.stormLevel}},j=function(e){for(var t=[],s=u(25);12===s;)s=u(25);for(var i=0;i<e;i++)t.push({role:"",position:s,water:0,maxWater:0});return t};function u(e){return Math.floor(Math.random()*e)}var v=function(){for(var e=[],t=0;t<2;t++)e.push({isRevealed:!1,sandCount:0,type:"well",finalParts:[]});e.push({isRevealed:!1,sandCount:0,type:"mirage",finalParts:[]});for(t=0;t<9;t++)e.push({isRevealed:!1,sandCount:0,type:"gear",finalParts:[]});for(t=0;t<3;t++)e.push({isRevealed:!1,sandCount:0,type:"tunnel",finalParts:[]});for(t=0;t<4;t++)for(var s=0;s<2;s++){var i,r;0===t?i="A":1===t?i="B":2===t?i="C":3===t&&(i="D"),0===s?r="h":1===s&&(r="v"),e.push({isRevealed:!1,sandCount:0,type:"clue",part:i,pos:r,finalParts:[]})}e.push({isRevealed:!1,sandCount:0,type:"launchpad",finalParts:[]}),function(e){var t,s=e.length;for(;0!==s;){t=Math.floor(Math.random()*s),s--;var i=[e[t],e[s]];e[s]=i[0],e[t]=i[1]}}(e),e.splice(12,0,{isRevealed:!1,sandCount:0,type:"storm",finalParts:[]});var n=[2,6,8,10,14,16,18,22];for(t=0;t<n.length;t++)e[n[t]].sandCount=1;return e};s(55);var b=s(0),f=function(e){Object(o.a)(s,e);var t=Object(p.a)(s);function s(){var e;Object(a.a)(this,s);for(var i=arguments.length,r=new Array(i),n=0;n<i;n++)r[n]=arguments[n];return(e=t.call.apply(t,[this].concat(r))).state={assignID:0,assignDifficulty:!1,digging:!1,givingWater:!1},e}return Object(c.a)(s,[{key:"assignRoleTo",value:function(e,t){this.props.moves.setPlayerInfo(e,t),this.setState({assignID:this.state.assignID+1})}},{key:"assignDifficultyTo",value:function(e){this.props.moves.setDifficulty(e),this.setState({assignDifficulty:!0})}},{key:"onClickTile",value:function(e){this.isAdjacentTile(e)||this.isSameTile(e)?this.state.digging&&this.props.G.tiles[e].sandCount>0?(this.props.moves.dig(e),this.setState({digging:!1})):!this.isSameTile(e)&&this.props.G.tiles[e].sandCount<2&&!this.state.digging&&!this.isBuried()&&this.props.moves.move(e):"tunnel"===this.props.G.tiles[e].type&&"tunnel"===this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].type&&this.props.G.tiles[e].sandCount<2&&!this.state.digging&&!this.isBuried()&&this.props.moves.move(e)}},{key:"excavate",value:function(){!1===this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].isRevealed&&0===this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].sandCount&&this.props.moves.excavate()}},{key:"giveWaterTo",value:function(e){this.props.G.players[e].position===this.props.G.players[this.props.ctx.currentPlayer].position&&this.props.G.players[e].water<this.props.G.players[e].maxWater&&this.props.G.players[this.props.ctx.currentPlayer].water>0&&(this.props.moves.giveWater(e),this.setState({givingWater:!1}))}},{key:"pickUpFinalPart",value:function(){this.props.moves.pickUpFinalPart()}},{key:"isAdjacentTile",value:function(e){var t=this.props.G.players[this.props.ctx.currentPlayer].position,s=e>=0&&e<=24&&(e===t-1||e===t+1||e===t-5||e===t+5);return e===t-1||e===t+1?Math.floor(e/5)===Math.floor(t/5):s}},{key:"isSameTile",value:function(e){return e===this.props.G.players[this.props.ctx.currentPlayer].position}},{key:"isBuried",value:function(){return this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].sandCount>1}},{key:"render",value:function(){var e=this;if(this.state.assignID<this.props.ctx.numPlayers)return Object(b.jsxs)("div",{className:"center",children:[Object(b.jsx)("div",{id:"title",children:"Role Selection"}),Object(b.jsxs)("div",{className:"header",children:["Choose role for Player ",this.state.assignID,":"]}),Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Archeologist")},children:"Archeologist"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Climber")},children:"Climber"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Explorer")},children:"Explorer"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Meteorologist")},children:"Meteorologist"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Navigator")},children:"Navigator"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Water Carrier")},children:"Water Carrier"})]}),Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:[Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Archeologist"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Removes 2 sand when digging instead of 1."}),Object(b.jsx)("li",{children:"Water capacity: 3"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Climber"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Carry: moves other players along with Climber. (Cost: free)"}),Object(b.jsx)("li",{children:"Can move over tiles with 2 or more sand."}),Object(b.jsx)("li",{children:"Allows all players on Climber's current tile to leave even with 2 or more sand."}),Object(b.jsx)("li",{children:"Water capacity: 3"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Explorer"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Can move, dig, and use items diagonally."}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Meteorologist"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Mitigate: draw 1 less Storm at the end of the turn. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Navigator"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Direct: move another player up to 3 tiles. Climber and Explorer keep their abilities. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Water Carrier"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Gather Water: take 2 water from an excavated well. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Give Water: give 1 water to an adjacent player. (Cost: free)"}),Object(b.jsx)("li",{children:"Water capacity: 5"})]})]})]})]});if(!1===this.state.assignDifficulty)return Object(b.jsxs)("div",{className:"center",children:[Object(b.jsx)("div",{id:"title",children:"Difficulty Selection"}),Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.assignDifficultyTo(0)},children:"Novice"}),Object(b.jsx)("button",{onClick:function(){e.assignDifficultyTo(1)},children:"Normal"}),Object(b.jsx)("button",{onClick:function(){e.assignDifficultyTo(2)},children:"Elite"}),Object(b.jsx)("button",{onClick:function(){e.assignDifficultyTo(3)},children:"Legendary"})]}),Object(b.jsx)("p",{}),Object(b.jsx)("div",{children:"(Difficulty sets the starting storm level.)"})]});for(var t=[],s=0;s<5;s++){for(var i=[],r=function(){l=[];var t=5*s+n;if("storm"===e.props.G.tiles[t].type)e.props.G.tiles[t].finalParts.length>0&&l.push(Object(b.jsxs)("div",{className:"final-part",children:["Parts: ",e.props.G.tiles[t].finalParts]})),i.push(Object(b.jsx)("td",{className:"storm",children:l}));else{for(a=[],c=0;c<e.props.G.players.length;c++)e.props.G.players[c].position===t&&a.push(c);if(l.push(Object(b.jsx)("div",{className:"player",children:a})),0!==e.props.G.tiles[t].sandCount){for(o="",p=0;p<e.props.G.tiles[t].sandCount;p++)o=o.concat("l");l.push(Object(b.jsx)("div",{className:e.props.G.tiles[t].sandCount>1?"sand red":"sand",children:o}))}if(e.props.G.tiles[t].finalParts.length>0&&l.push(Object(b.jsxs)("div",{className:"final-part",children:["Parts: ",e.props.G.tiles[t].finalParts]})),!1===e.props.G.tiles[t].isRevealed)i.push(Object(b.jsx)("td",{className:"well"===e.props.G.tiles[t].type||"mirage"===e.props.G.tiles[t].type?"unrevealed-water":"unrevealed",onClick:function(){return e.onClickTile(t)},children:l},t));else if("clue"===e.props.G.tiles[t].type){var r=e.props.G.tiles[t].part+e.props.G.tiles[t].pos;i.push(Object(b.jsx)("td",{className:r,onClick:function(){return e.onClickTile(t)},children:l},t))}else i.push(Object(b.jsx)("td",{className:e.props.G.tiles[t].type,onClick:function(){return e.onClickTile(t)},children:l},t))}},n=0;n<5;n++){var l,a,c,o,p;r()}t.push(Object(b.jsx)("tr",{children:i},s))}var d=[];if(d.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.setState({digging:!e.state.digging})},children:"Dig"}),Object(b.jsx)("div",{children:this.state.digging?"Choose a tile to dig.":""}),Object(b.jsx)("button",{onClick:function(){e.excavate()},children:"Excavate"}),Object(b.jsx)("button",{onClick:function(){e.setState({givingWater:!e.state.givingWater})},children:"Give water to..."})]})),this.state.givingWater){var h=function(){var t=s;d.push(Object(b.jsx)("div",{children:Object(b.jsxs)("button",{onClick:function(){e.giveWaterTo(t)},children:["Player ",s]})}))};for(s=0;s<this.props.G.players.length;s++)h()}this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].isRevealed&&this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].finalParts.length>0&&d.push(Object(b.jsx)("div",{children:Object(b.jsx)("button",{onClick:function(){e.pickUpFinalPart()},children:"Pick up part"})})),d.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.props.undo()},children:"Undo"}),Object(b.jsx)("button",{onClick:function(){e.props.moves.doNothing()},children:"Do nothing"})]}));var j=[];j.push(Object(b.jsx)("div",{children:"Players:"}));var u,v,f,x,y,O=[];for(s=0;s<this.props.ctx.numPlayers;s++)O.push(Object(b.jsxs)("div",{children:[s," - ",this.props.G.players[s].role," \ud83c\udf7c ",this.props.G.players[s].water," / ",this.props.G.players[s].maxWater]}));j.push(O),2===this.props.ctx.numPlayers?(u="1 - 3",v="4 - 7",f="8 - 10",x="11 - 12",y="13"):3===this.props.ctx.numPlayers||4===this.props.ctx.numPlayers?(u="1 - 4",v="5 - 8",f="9 - 11",x="12 - 13",y="14"):5===this.props.ctx.numPlayers&&(u="1 - 5",v="6 - 9",f="10 - 12",x="13 - 14",y="15"),j.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:["Current storm level: ",this.props.G.stormLevel]}),Object(b.jsx)("p",{}),Object(b.jsx)("div",{children:"Info:"}),Object(b.jsx)("div",{children:"Draw 2 at level 0"}),Object(b.jsxs)("div",{children:["Draw 3 at levels ",u]}),Object(b.jsxs)("div",{children:["Draw 4 at levels ",v]}),Object(b.jsxs)("div",{children:["Draw 5 at levels ",f]}),Object(b.jsxs)("div",{children:["Draw 6 at levels ",x]}),Object(b.jsxs)("div",{children:["Game over at level ",y]}),Object(b.jsx)("div",{children:"Probability of Sun Beats Down: 12.9%"}),Object(b.jsx)("div",{children:"Probability of Storm Picks Up: 9.7%"})]})),j.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{}),"End of last turn:"]}));for(s=0;s<this.props.G.lastDrawType.length;s++)j.push(Object(b.jsx)("div",{children:this.props.G.lastDrawType[s]}));var g=[];for(s=0;s<this.props.G.collectedParts.length;s++){var m;"A"===this.props.G.collectedParts[s]?m="red":"B"===this.props.G.collectedParts[s]?m="green":"C"===this.props.G.collectedParts[s]?m="blue":"D"===this.props.G.collectedParts[s]&&(m="purple"),g.push(Object(b.jsx)("div",{className:m,children:this.props.G.collectedParts[s]}))}return j.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{}),"Collected parts (4 total): ",g]})),Object(b.jsxs)("div",{children:[Object(b.jsxs)("div",{className:"fl",children:[Object(b.jsxs)("div",{className:"header center",children:[Object(b.jsxs)("div",{children:["Player ",this.props.ctx.currentPlayer,"'s turn"]}),Object(b.jsxs)("div",{children:["Actions left in turn: ",4-this.props.ctx.numMoves]})]}),Object(b.jsx)("table",{children:Object(b.jsx)("tbody",{children:t})}),Object(b.jsx)("div",{className:"center",children:d})]}),Object(b.jsx)("div",{className:"fl",children:j})]})}}]),s}(r.a.Component),x=(s(57),function(e){Object(o.a)(s,e);var t=Object(p.a)(s);function s(){var e;Object(a.a)(this,s);for(var i=arguments.length,r=new Array(i),n=0;n<i;n++)r[n]=arguments[n];return(e=t.call.apply(t,[this].concat(r))).state={numPlayers:null},e}return Object(c.a)(s,[{key:"render",value:function(){var e=this;if(null===this.state.numPlayers)return Object(b.jsxs)("div",{className:"center",children:[Object(b.jsx)("div",{children:"!! THIS IS A WORK IN PROGRESS !!"}),Object(b.jsx)("div",{id:"title",children:"FORBIDDEN DESERT"}),Object(b.jsx)("div",{children:"Based off the original game designed by Matt Leacock."}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://www.gamewright.com/gamewright/pdfs/Rules/ForbiddenDesertTM-RULES.pdf",children:"Official rules manual"})}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://boardgamegeek.com/boardgame/136063/forbidden-desert",children:"BoardGameGeek listing"})}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://github.com/hwabis/forbidden-desert",children:"Source code"})}),Object(b.jsxs)("div",{id:"header",children:[Object(b.jsx)("p",{children:"Select number of players:"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:2})},children:"2"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:3})},children:"3"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:4})},children:"4"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:5})},children:"5"})]})]});var t=Object(d.a)({game:h,numPlayers:this.state.numPlayers,board:f});return Object(b.jsx)("div",{children:Object(b.jsx)(t,{})})}}]),s}(r.a.Component));l.a.render(Object(b.jsx)(r.a.StrictMode,{children:Object(b.jsx)(x,{})}),document.getElementById("root"))}},[[93,1,2]]]);
//# sourceMappingURL=main.d88c828c.chunk.js.map