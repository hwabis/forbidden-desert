(this["webpackJsonpforbidden-desert"]=this["webpackJsonpforbidden-desert"]||[]).push([[0],{55:function(e,t,s){},57:function(e,t,s){},93:function(e,t,s){"use strict";s.r(t);var i=s(1),r=s.n(i),n=s(48),a=s.n(n),c=s(3),l=s(4),o=s(5),d=s(6),h=s(49),j={setup:function(e){return{players:p(e.numPlayers),tiles:u()}},moves:{move:function(e,t,s){e.players[t.currentPlayer].position=s},dig:function(e,t,s){e.tiles[s].sandCount--},excavate:{move:function(e,t){e.tiles[e.players[t.currentPlayer].position].isRevealed=!0},undoable:!1},doNothing:function(e,t){t.events.endTurn()},setPlayerInfo:{move:function(e,t,s,i){e.players[s].role=i,"Archeologist"===i||"Climber"===i?(e.players[s].maxWater=3,e.players[s].water=3):"Explorer"===i||"Meteorologist"===i||"Navigator"===i?(e.players[s].maxWater=4,e.players[s].water=4):(e.players[s].maxWater=5,e.players[s].water=5)},undoable:!1,noLimit:!0},removeWater:{move:function(e,t,s){e.players[s].water-=1},noLimit:!0}},turn:{moveLimit:4},endIf:function(e,t){for(var s=0;s<e.players.length;s++)if(0===e.players[s].water)return!0;return!1}},p=function(e){for(var t,s=[],i=(t=25,Math.floor(Math.random()*t)),r=0;r<e;r++)s.push({role:"",position:i,water:-1,maxWater:-1});return s};var u=function(){for(var e=[],t=0;t<2;t++)e.push({isRevealed:!1,sandCount:0,type:"well"});e.push({isRevealed:!1,sandCount:0,type:"mirage"});for(t=0;t<9;t++)e.push({isRevealed:!1,sandCount:0,type:"gear"});for(t=0;t<3;t++)e.push({isRevealed:!1,sandCount:0,type:"tunnel"});for(t=0;t<4;t++)for(var s=0;s<2;s++)e.push({isRevealed:!1,sandCount:0,type:"clue",part:t,pos:s});e.push({isRevealed:!1,sandCount:0,type:"launchpad"}),function(e){var t,s=e.length;for(;0!==s;){t=Math.floor(Math.random()*s),s--;var i=[e[t],e[s]];e[s]=i[0],e[t]=i[1]}}(e),e.splice(12,0,{isRevealed:!1,sandCount:0,type:"storm"});var i=[2,6,8,10,14,16,18,22];for(t=0;t<i.length;t++)e[i[t]].sandCount=1;return e};s(55);var b=s(0),v=function(e){Object(o.a)(s,e);var t=Object(d.a)(s);function s(){var e;Object(c.a)(this,s);for(var i=arguments.length,r=new Array(i),n=0;n<i;n++)r[n]=arguments[n];return(e=t.call.apply(t,[this].concat(r))).state={assignID:0,digging:!1},e}return Object(l.a)(s,[{key:"assignRoleTo",value:function(e,t){this.props.moves.setPlayerInfo(e,t),this.setState({assignID:this.state.assignID+1})}},{key:"onClickTile",value:function(e){(this.isAdjacentTile(e)||this.isSameTile(e))&&(this.state.digging&&this.props.G.tiles[e].sandCount>0?(this.props.moves.dig(e),this.setState({digging:!1})):!this.isSameTile(e)&&this.props.G.tiles[e].sandCount<2&&!this.state.digging&&!this.isBuried()&&this.props.moves.move(e))}},{key:"excavate",value:function(){!1===this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].isRevealed&&this.props.moves.excavate()}},{key:"isAdjacentTile",value:function(e){var t=this.props.G.players[this.props.ctx.currentPlayer].position;return e>=0&&e<=24&&(e===t-1||e===t+1||e===t-5||e===t+5)}},{key:"isSameTile",value:function(e){return e===this.props.G.players[this.props.ctx.currentPlayer].position}},{key:"isBuried",value:function(){return this.props.G.tiles[this.props.G.players[this.props.ctx.currentPlayer].position].sandCount>1}},{key:"render",value:function(){var e=this;if(this.state.assignID<this.props.ctx.numPlayers)return Object(b.jsxs)("div",{className:"center",children:[Object(b.jsx)("div",{id:"title",children:"Role Selection"}),Object(b.jsxs)("div",{className:"header",children:["Choose role for Player ",this.state.assignID,":"]}),Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Archeologist")},children:"Archeologist"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Climber")},children:"Climber"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Explorer")},children:"Explorer"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Meteorologist")},children:"Meteorologist"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Navigator")},children:"Navigator"}),Object(b.jsx)("button",{onClick:function(){e.assignRoleTo(e.state.assignID,"Water Carrier")},children:"Water Carrier"})]}),Object(b.jsx)("p",{}),Object(b.jsxs)("div",{children:[Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Archeologist"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Removes 2 sand when digging instead of 1."}),Object(b.jsx)("li",{children:"Water capacity: 3"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Climber"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Carry: moves other players along with Climber. (Cost: free)"}),Object(b.jsx)("li",{children:"Can move over tiles with 2 or more sand."}),Object(b.jsx)("li",{children:"Allows all players on Climber's current tile to leave even with 2 or more sand."}),Object(b.jsx)("li",{children:"Water capacity: 3"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Explorer"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Can move, dig, and use items diagonally."}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Meteorologist"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Mitigate: draw 1 less Storm at the end of the turn. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Navigator"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Direct: move another player up to 3 tiles. Climber and Explorer keep their abilities. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Water capacity: 4"})]})]}),Object(b.jsxs)("div",{children:[Object(b.jsx)("p",{id:"header",children:"Water Carrier"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Gather Water: take 2 water from an excavated well. (Cost: 1 action)"}),Object(b.jsx)("li",{children:"Give Water: give 1 water to an adjacent player. (Cost: free)"}),Object(b.jsx)("li",{children:"Water capacity: 5"})]})]})]})]});for(var t=[],s=0;s<5;s++){for(var i=[],r=function(){a=[];var t=5*s+n;if("storm"===e.props.G.tiles[t].type)i.push(Object(b.jsx)("td",{id:"storm"},t));else{for(c=[],l=0;l<e.props.G.players.length;l++)e.props.G.players[l].position===t&&c.push(l);if(a.push(Object(b.jsx)("div",{className:"player",children:c})),0!==e.props.G.tiles[t].sandCount){for(o="",d=0;d<e.props.G.tiles[t].sandCount;d++)o=o.concat("l");a.push(Object(b.jsxs)("div",{className:e.props.G.tiles[t].sandCount>1?"sand red":"sand",children:["Sand: ",o]}))}!1===e.props.G.tiles[t].isRevealed?i.push(Object(b.jsx)("td",{className:"well"===e.props.G.tiles[t].type||"mirage"===e.props.G.tiles[t].type?"unrevealed-water":"unrevealed",onClick:function(){return e.onClickTile(t)},children:a},t)):i.push(Object(b.jsx)("td",{className:e.props.G.tiles[t].type,onClick:function(){return e.onClickTile(t)},children:a},t))}},n=0;n<5;n++){var a,c,l,o,d;r()}t.push(Object(b.jsx)("tr",{children:i},s))}var h=[];for(s=0;s<this.props.ctx.numPlayers;s++)h.push(Object(b.jsxs)("div",{children:[s," - ",this.props.G.players[s].role," \ud83c\udf7c ",this.props.G.players[s].water," / ",this.props.G.players[s].maxWater]}));var j=[];return j.push(Object(b.jsxs)("div",{children:[Object(b.jsx)("button",{onClick:function(){e.setState({digging:!e.state.digging})},children:"Dig"}),Object(b.jsx)("div",{children:this.state.digging?"Choose a tile to dig.":""}),Object(b.jsx)("button",{onClick:function(){e.excavate()},children:"Excavate"}),Object(b.jsx)("button",{onClick:function(){e.props.undo()},children:"Undo"}),Object(b.jsx)("button",{onClick:function(){e.props.moves.doNothing()},children:"Do Nothing"})]})),Object(b.jsxs)("div",{children:[Object(b.jsxs)("div",{className:"fl",children:[Object(b.jsxs)("div",{className:"header center",children:[Object(b.jsxs)("div",{children:["Player ",this.props.ctx.currentPlayer,"'s turn"]}),Object(b.jsxs)("div",{children:["Actions left in turn: ",4-this.props.ctx.numMoves]})]}),Object(b.jsx)("table",{children:Object(b.jsx)("tbody",{children:t})}),Object(b.jsx)("div",{className:"center",children:j})]}),Object(b.jsxs)("div",{className:"fl",children:[Object(b.jsx)("div",{children:"Players:"}),h]})]})}}]),s}(r.a.Component),x=(s(57),function(e){Object(o.a)(s,e);var t=Object(d.a)(s);function s(){var e;Object(c.a)(this,s);for(var i=arguments.length,r=new Array(i),n=0;n<i;n++)r[n]=arguments[n];return(e=t.call.apply(t,[this].concat(r))).state={numPlayers:null},e}return Object(l.a)(s,[{key:"render",value:function(){var e=this;if(null===this.state.numPlayers)return Object(b.jsxs)("div",{className:"center",children:[Object(b.jsx)("div",{id:"title",children:"FORBIDDEN DESERT"}),Object(b.jsx)("div",{children:"Based off the original game designed by Matt Leacock."}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://www.gamewright.com/gamewright/pdfs/Rules/ForbiddenDesertTM-RULES.pdf",children:"Official rules manual"})}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://boardgamegeek.com/boardgame/136063/forbidden-desert",children:"BoardGameGeek listing"})}),Object(b.jsx)("div",{children:Object(b.jsx)("a",{href:"https://github.com/hwabis/forbidden-desert",children:"Source code"})}),Object(b.jsxs)("div",{id:"header",children:[Object(b.jsx)("p",{children:"Select number of players:"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:2})},children:"2"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:3})},children:"3"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:4})},children:"4"}),Object(b.jsx)("button",{onClick:function(){return e.setState({numPlayers:5})},children:"5"})]})]});var t=Object(h.a)({game:j,numPlayers:this.state.numPlayers,board:v});return Object(b.jsx)("div",{children:Object(b.jsx)(t,{})})}}]),s}(r.a.Component));a.a.render(Object(b.jsx)(r.a.StrictMode,{children:Object(b.jsx)(x,{})}),document.getElementById("root"))}},[[93,1,2]]]);
//# sourceMappingURL=main.21aa6429.chunk.js.map