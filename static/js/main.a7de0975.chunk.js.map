{"version":3,"sources":["Game.js","board.js","App.js","index.js"],"names":["ForbiddenDesert","setup","ctx","players","setupPlayers","numPlayers","tiles","setupTiles","moves","move","G","pos","currentPlayer","position","dig","sandCount","doNothing","events","endTurn","setPlayerRole","id","role","undoable","noLimit","turn","moveLimit","i","push","isStorm","isRevealed","sandTiles","length","ForbiddenDesertBoard","state","assignID","digging","this","props","setState","isAdjacentTile","isSameTile","currentPlayerPos","console","log","className","onClick","assignRoleTo","row","tile","j","k","sandIndicator","l","concat","numMoves","undo","React","Component","App","ForbiddenDesertClient","Client","game","board","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7de0975.chunk.js","sourcesContent":["export const ForbiddenDesert = {\r\n    setup: (ctx) => ({\r\n        players: setupPlayers(ctx.numPlayers),\r\n        tiles: setupTiles(),\r\n    }),\r\n\r\n    moves: {\r\n        move: (G, ctx, pos) => {\r\n            G.players[ctx.currentPlayer].position = pos;\r\n        },\r\n        dig: (G, ctx, pos) => {\r\n            G.tiles[pos].sandCount--;\r\n        },\r\n        doNothing: (G, ctx) => {\r\n            ctx.events.endTurn();\r\n        },\r\n        setPlayerRole: {\r\n            move: (G, ctx, id, role) => {G.players[id].role = role},\r\n            undoable: false,\r\n            noLimit: true\r\n        }\r\n    },\r\n\r\n    turn: {\r\n        moveLimit: 4,\r\n    },\r\n}; \r\n\r\nvar setupPlayers = (numPlayers) => {\r\n    var players = [];\r\n    for (var i = 0; i < numPlayers; i++) {\r\n        players.push({\r\n            role: \"\", \r\n            //TODO: REPLACE WITH HELICOPTER CRASH TILE POSITION\r\n            position: 3,\r\n        });\r\n    }\r\n    return players;\r\n}\r\n\r\nvar setupTiles = () => {\r\n    var tiles = [];\r\n    for (var i = 0; i < 25; i++) {\r\n        var tile = {\r\n            isStorm: false,\r\n            isRevealed: false,\r\n            sandCount: 0,\r\n        }\r\n        tiles.push(tile);\r\n    }\r\n    tiles[12].isStorm = true;\r\n    const sandTiles = [2, 6, 8, 10, 14, 16, 18, 22];\r\n    for (var i = 0; i < sandTiles.length; i++) {\r\n        tiles[sandTiles[i]].sandCount = 1;\r\n    }\r\n    return tiles;\r\n}","import React from 'react';\r\nimport './board.css';\r\n\r\nexport class ForbiddenDesertBoard extends React.Component {\r\n    state = {\r\n        assignID: 0,\r\n        digging: false\r\n    }\r\n\r\n    assignRoleTo(id, role) {\r\n        this.props.moves.setPlayerRole(id, role);\r\n        this.setState({ assignID: this.state.assignID + 1 });\r\n    }\r\n    onClick(id) {\r\n        if (this.isAdjacentTile(id) || this.isSameTile(id)) {\r\n            if (this.state.digging && this.props.G.tiles[id].sandCount > 0) {\r\n                this.props.moves.dig(id);\r\n                this.setState({ digging: false });\r\n            }\r\n            else if (!this.isSameTile(id) && this.props.G.tiles[id].sandCount < 2 && !this.state.digging) {\r\n                this.props.moves.move(id);\r\n            }\r\n        }\r\n    }\r\n    isAdjacentTile(id) {\r\n        const currentPlayerPos = this.props.G.players[this.props.ctx.currentPlayer].position;\r\n        return (id >= 0 && id <= 24 &&\r\n            (id === currentPlayerPos - 1 || id === currentPlayerPos + 1 ||\r\n                id === currentPlayerPos - 5 || id === currentPlayerPos + 5));\r\n    }\r\n    isSameTile(id) {\r\n        return (id === this.props.G.players[this.props.ctx.currentPlayer].position);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.assignID < this.props.ctx.numPlayers) {\r\n            console.log(this.state.assignID);\r\n            return (\r\n                <div className=\"center\">\r\n                    <div id=\"title\">\r\n                        Role Selection\r\n                    </div>\r\n                    <div className=\"header\">\r\n                        Choose role for Player {this.state.assignID}:\r\n                    </div>\r\n                    <p></p>\r\n                    <div>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"archeologist\"); }}>\r\n                            Archeologist\r\n                        </button>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"climber\"); }}>\r\n                            Climber\r\n                        </button>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"explorer\"); }}>\r\n                            Explorer\r\n                        </button>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"meteorologist\"); }}>\r\n                            Meteorologist\r\n                        </button>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"navigator\"); }}>\r\n                            Navigator\r\n                        </button>\r\n                        <button onClick={() => { this.assignRoleTo(this.state.assignID, \"water-carrier\"); }}>\r\n                            Water Carrier\r\n                        </button>\r\n                    </div>\r\n                    <p></p>\r\n                    <div>\r\n                        <div>\r\n                            <p id=\"header\">Archeologist</p>\r\n                            <ul>\r\n                                <li>Removes 2 sand when digging instead of 1.</li>\r\n                                <li>Water capacity: 3</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <p id=\"header\">Climber</p>\r\n                            <ul>\r\n                                <li>Carry: moves other players along with Climber. (Cost: free)</li>\r\n                                <li>Can move over tiles with 2 or more sand.</li>\r\n                                <li>Allows all players on Climber's current tile to leave even with 2 or more sand.</li>\r\n                                <li>Water capacity: 3</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <p id=\"header\">Explorer</p>\r\n                            <ul>\r\n                                <li>Can move, dig, and use items diagonally.</li>\r\n                                <li>Water capacity: 4</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <p id=\"header\">Meteorologist</p>\r\n                            <ul>\r\n                                <li>Mitigate: draw 1 less Storm at the end of the turn. (Cost: 1 action)</li>\r\n                                <li>Water capacity: 4</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <p id=\"header\">Navigator</p>\r\n                            <ul>\r\n                                <li>Direct: move another player up to 3 tiles. Climber and Explorer keep their abilities. (Cost: 1 action)</li>\r\n                                <li>Water capacity: 4</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <p id=\"header\">Water Carrier</p>\r\n                            <ul>\r\n                                <li>Gather Water: take 2 water from an excavated well. (Cost: 1 action)</li>\r\n                                <li>Give Water: give 1 water to an adjacent player. (Cost: free)</li>\r\n                                <li>Water capacity: 5</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        var tiles = [];\r\n        for (var i = 0; i < 5; i++) {\r\n            var row = [];\r\n            for (var j = 0; j < 5; j++) {\r\n                var tile = [];\r\n                const id = 5 * i + j;\r\n                if (this.props.G.tiles[id].isStorm) {\r\n                    row.push(<td key={id} id=\"storm\"></td>);\r\n                }\r\n                else {\r\n                    var players = [];\r\n                    for (var k = 0; k < this.props.G.players.length; k++) {\r\n                        if (this.props.G.players[k].position === id) {\r\n                            players.push(k);\r\n                        }\r\n                    }\r\n                    //eventually push each player marker so their color represents their role\r\n                    tile.push(<div className=\"player\">{players}</div>);\r\n                    if (this.props.G.tiles[id].sandCount !== 0) {\r\n                        var sandIndicator = \"\";\r\n                        for (var l = 0; l < this.props.G.tiles[id].sandCount; l++) {\r\n                            sandIndicator = sandIndicator.concat(\"l\");\r\n                        }\r\n                        tile.push(<div className={this.props.G.tiles[id].sandCount > 1 ? \"sand red\" : \"sand\"}>\r\n                            Sand: {sandIndicator}</div>);\r\n                    }\r\n                    row.push(<td key={id} className=\"unrevealed\" onClick={() => this.onClick(id)}>{tile}</td>);\r\n                }\r\n            }\r\n            tiles.push(<tr key={i}>{row}</tr>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"center\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        Player {this.props.ctx.currentPlayer}'s turn\r\n                    </div>\r\n                    <div>\r\n                        Actions left in turn: {4 - this.props.ctx.numMoves}\r\n                    </div>\r\n                </div>\r\n                <table className=\"center\">\r\n                    <tbody>{tiles}</tbody>\r\n                </table>\r\n                <div>\r\n                    <button onClick={() => { this.props.undo(); }}>\r\n                        Undo\r\n                    </button>\r\n                    <button onClick={() => { this.setState({ digging: !this.state.digging }); }}>\r\n                        Dig\r\n                    </button>\r\n                    <div>\r\n                        {this.state.digging ? \"Choose a tile to dig.\" : \"\"}\r\n                    </div>\r\n                    <button onClick={() => { this.props.moves.doNothing(); }}>\r\n                        Do Nothing\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Client } from 'boardgame.io/react';\r\nimport { ForbiddenDesert } from './Game';\r\nimport { ForbiddenDesertBoard } from './board';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = { numPlayers: null };\r\n\r\n  render() {\r\n    if (this.state.numPlayers === null) {\r\n      return (\r\n        <div className=\"center\">\r\n          <div id=\"title\">\r\n            FORBIDDEN DESERT\r\n          </div>\r\n          <div id=\"header\">\r\n            <p>Select number of players:</p>\r\n            <button onClick={() => this.setState({ numPlayers: 2 })}>\r\n              2\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 3 })}>\r\n              3\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 4 })}>\r\n              4\r\n            </button>\r\n            <button onClick={() => this.setState({ numPlayers: 5 })}>\r\n              5\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      const ForbiddenDesertClient = Client({\r\n        game: ForbiddenDesert,\r\n        numPlayers: this.state.numPlayers,\r\n        board: ForbiddenDesertBoard,\r\n      });\r\n      return (\r\n        <div>\r\n          <ForbiddenDesertClient />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}